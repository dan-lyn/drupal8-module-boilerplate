<?php

function drupal8_module_boilerplate_page_attachments(&$page) {
    $page['#attached']['library'][] = 'drupal8_module_boilerplate/drupal8-module-boilerplate-css-and-js';
}

function drupal8_module_boilerplate_theme($existing, $type, $theme, $path) {
    return array(
        'drupalboilerplate-block' => array(
            'variables' => array(),
        ),
        'drupalboilerplate-page' => array(
            'variables' => array(),
        )
    );
}

// Setup custom 404!
// -> add file "page--404.html.twig" to theme template folder
function drupal8_module_boilerplate_theme_suggestions_page(array $variables) {
    $path_args = explode('/', trim(\Drupal::service('path.current')->getPath(), '/'));

    $suggestions = theme_get_suggestions($path_args, 'page');

    $http_error_suggestions = [
        'system.404' => 'page__404',
    ];

    $route_name = \Drupal::routeMatch()->getRouteName();

    if (isset($http_error_suggestions[$route_name])) {
        $suggestions[] = $http_error_suggestions[$route_name];
    }

    return $suggestions;
}

// Create images based on image specific image style on upload:
function drupal8_module_boilerplate_insert(Drupal\Core\Entity\EntityInterface $entity) {
  error_log('updating images');
    generateImages($entity, 'large');
    generateImages($entity, 'medium');
    generateImages($entity, 'thumbnail');
}
function generateImages (Drupal\Core\Entity\EntityInterface $entity, $type = 'large') {
    if ($entity Instanceof \Drupal\file\FileInterface && $entity->getFileUri()) {
        $imageUri = $entity->getFileUri();
        $style = \Drupal\image\Entity\ImageStyle::load($type);
        $destination = $style->buildUri($imageUri);
        $style->createDerivative($imageUri, $destination);
    }
}
